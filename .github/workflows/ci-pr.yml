name: CI on Pull Request
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
jobs:
  install:
    name: Install dependencies
    if: ${{ github.actor != 'dependabot[bot]' && !github.event.pull_request.head.repo.fork }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Cache Node.js modules
        id: cache-node-modules
        uses: actions/cache@v3.0.2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install
  lint:
    name: Lint codes
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Restore Node.js modules
        uses: actions/cache@v3.0.2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: commitlint
        run: echo "${{ github.event.pull_request.title }}" | yarn commitlint
      - name: StyleLint
        run: yarn stylelint -f json > stylelint-report.json
      - name: ESLint
        run: yarn eslint -f json -o eslint-report.json
  unit_test:
    name: Unit test
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Restore Node.js modules
        uses: actions/cache@v3.0.2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Cache test report
        id: cache-test-report
        uses: actions/cache@v3.0.2
        with:
          path: coverage/lcov.info
          key: test-report-${{ github.event.pull_request.head.sha }}
      - name: Test
        if: steps.cache-test-report.outputs.cache-hit != 'true'
        run: yarn test --coverage
  sonar:
    name: Sonar scan
    needs: unit_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Restore test report
        uses: actions/cache@v3.0.2
        with:
          path: coverage/lcov.info
          key: test-report-${{ github.event.pull_request.head.sha }}
      - name: Upload reports to SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build:
    name: Build package
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Restore Node.js modules
        uses: actions/cache@v3.0.2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Build
        run: yarn build
