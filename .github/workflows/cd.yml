name: Continuous Deployment
on:
  push:
    branches:
      - master
jobs:
  install:
    name: Install dependencies
    if: ${{ !(startsWith(github.event.head_commit.message, 'chore') || startsWith(github.event.head_commit.message, 'style')) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '1'
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 12.x
      - name: Cache Node.js modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install
  build:
    name: Build Package
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '1'
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 12.x
      - name: Restore Node.js modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: |
            dist
            es
          key: packages-${{ github.sha }}
      - name: Build package
        run: yarn build
  release:
    name: Create release
    if: ${{ startsWith(github.event.head_commit.message, 'docs(release)') }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: gio-design@${{ github.ref }}
          body: ${{ github.event.head_commit.message }}
          draft: true
          prerelease: false
  other:
    name: Upload test coverage and build website
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '1'
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 12.x
      - name: Restore Node.js modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Restore packages from cache
        uses: actions/cache@v2
        with:
          path: |
            dist
            es
          key: packages-${{ github.sha }}
      - name: Test
        run: yarn test --coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          directory: ./coverage/
