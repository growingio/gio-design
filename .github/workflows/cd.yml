name: Continuous Deployment
on:
  push:
    branches:
      - master
jobs:
  install:
    name: Install dependencies
    if: ${{ !(startsWith(github.event.head_commit.message, 'chore') || startsWith(github.event.head_commit.message, 'style')) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '1'
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 12.x
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Bootstrap
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn bootstrap
  build:
    name: Build Packages
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '1'
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 12.x
      - name: Restore Node.js modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: |
            packages/components/dist
            packages/components/es
            packages/icons/dist
            packages/icons/es
            packages/tokens/dist
          key: packages-${{ github.sha }}
      - name: Build packages
        run: yarn build
  release:
    name: Create release
    if: ${{ startsWith(github.event.head_commit.message, 'docs(release)') }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: gio-design@${{ github.ref }}
          body: ${{ github.event.head_commit.message }}
          draft: true
          prerelease: false
  other:
    name: Upload test coverage and build website
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '1'
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 12.x
      - name: Restore Node.js modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Restore packages from cache
        uses: actions/cache@v2
        with:
          path: |
            packages/components/dist
            packages/components/es
            packages/icons/dist
            packages/icons/es
            packages/tokens/dist
          key: packages-${{ github.sha }}
      - name: Test
        run: yarn test --coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          directory: ./packages/components/coverage/
      - name: Cahce website
        uses: actions/cache@v2
        with:
          path: |
            packages/website/dist
          key: website-${{ github.sha }}
      - name: Build website
        run: yarn build:website
  deploy_netlify:
    name: Deploying website to Netlify
    needs: other
    runs-on: ubuntu-latest
    steps:
      - name: Restore website
        uses: actions/cache@v2
        with:
          path: |
            packages/website/dist
          key: website-${{ github.sha }}
      - name: Deploy
        uses: netlify/actions/cli@master
        with:
          args: deploy --prod --dir ./packages/website/dist
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

  deploy_github:
    name: Deploying website to GitHub Pages
    needs: other
    runs-on: ubuntu-latest
    steps:
      - name: Restore website
        uses: actions/cache@v2
        with:
          path: |
            packages/website/dist
          key: website-${{ github.sha }}
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./packages/website/dist
