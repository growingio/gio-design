@import (reference) '../../stylesheet/variables/index.less';

@checkbox-prefix-cls: ~'@{component-prefix}-checkbox';
@checkbox-checked-prefix-cls: ~'@{checkbox-prefix-cls}-checked';
@checkbox-indeterminate-prefix-cls: ~'@{checkbox-prefix-cls}-indeterminate';
@checkbox-inner-prefix-cls: ~'@{checkbox-prefix-cls}-inner';
@checkbox-icon-cls: ~'@{checkbox-prefix-cls}-icon';
@group-prefix-cls: ~'@{checkbox-prefix-cls}-group';
@checkbox-wrapper-cls: ~'@{checkbox-prefix-cls}-wrapper';

.@{checkbox-wrapper-cls} {
  position: relative;
  display: inline-block;
  box-sizing: border-box;
  max-width: 100%;
  margin: 0;
  font-weight: normal;
  line-height: 22px;
  white-space: nowrap;
  cursor: pointer;

  --active: @blue-3;
  --active-inner: @gray-0;
  --border: @gray-2;
  --border-hover: @blue-3;
  --background: @gray-0;
  --disabled: @gray-1;
  --disabled-inner: @gray-3;

  input[type='checkbox'].@{checkbox-prefix-cls} {
    position: relative;
    display: inline-block;
    width: 16px;
    height: 16px;
    margin: 0;
    vertical-align: middle;
    background: var(--b, var(--background));
    border: 1px solid var(--bc, var(--border));
    border-radius: 4px;
    outline: none;
    cursor: pointer;
    transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
    appearance: none;

    &:checked,
    &[indeterminate='true'] {
      --b: var(--active);
      --bc: var(--active);
      --d-o: 0.3s;
      --d-t: 0.6s;
      --d-t-e: cubic-bezier(0.2, 0.85, 0.32, 1.2);
      --r: 43deg;
    }

    &:disabled {
      --b: var(--disabled);
      cursor: not-allowed;
      opacity: 0.9;

      &:checked,
      &[indeterminate='true'] {
        --b: var(--disabled);
        --bc: var(--border);
      }

      & + span {
        cursor: not-allowed;
      }
    }

    &:hover {
      &:not(:checked) {
        &:not(:disabled) {
          --bc: var(--border-hover);
        }
      }
    }

    & + span:not(:empty) {
      margin-left: 8px;
      font-size: 14px;
      line-height: 22px;
      vertical-align: middle;
      cursor: pointer;
    }

    &::after {
      position: absolute;
      top: 0;
      left: 0;
      display: block;
      box-sizing: content-box;
      transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
      content: '';
    }

    &:checked {
      &::after {
        left: 4px;
        width: 5px;
        height: 9px;
        border: 1px solid var(--active-inner);
        border-top: 0;
        border-left: 0;
        transform: rotate(var(--r, 20deg));
      }

      &:disabled {
        &::after {
          border-color: var(--disabled-inner);
        }
      }
    }

    &[indeterminate='true'] {
      &::after {
        left: 2px;
        width: 10px;
        height: 7px;
        border: 1px solid var(--active-inner);
        border-top: 0;
        border-right: 0;
        border-left: 0;
        transform: none;
        content: '';
      }

      &:disabled {
        &::after {
          border-color: var(--disabled-inner);
        }
      }
    }
  }
}

.@{group-prefix-cls} {
  display: inline-flex;
  justify-content: flex-start;

  &__vertical {
    flex-direction: column;
    align-items: flex-start;
    .@{checkbox-wrapper-cls} {
      align-items: flex-start;
      justify-content: flex-start;
    }
    .@{checkbox-wrapper-cls} + .@{checkbox-wrapper-cls} {
      margin-top: 16px;
    }
  }

  &__horizontal {
    flex-direction: row;
    align-items: center;
    .@{checkbox-wrapper-cls}:not(:last-child) {
      margin-right: 16px;
    }
  }
}
